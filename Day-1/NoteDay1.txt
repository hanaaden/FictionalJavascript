TypeScript is known as an Object-oriented 
programming language whereas JavaScript
 is a prototype-based language.

TypeScript has a feature known as 
Static typing but JavaScript does not 
support this feature

TypeScript supports Interfaces but 
JavaScript does not.

let is block scope
Hoisting: Hoisted but not initialized, so accessing it before declaration results in a ReferenceError.
paractices: for variables that need to be reassigned.

========================================

var is function scope
Hoisting: var are hoisted to the top of their scope and initialized as undefined.
paractice  Generally avoided in modern JavaScript

========================================

 const is block scoped
Hoisting: Hoisted but not initialized, so accessing it before declaration results in a ReferenceErro
for variables that should not be reassigned.

========================================

scope refers how varaibles,objects and functions are accesible 
= function scope is varaible declered within the function\
they are only accesible within function


function myfun(){
    var local = 100
    console.log("the local variable is " + local)
}

if we console console.log(local) now here it will give error
myfun()

 = block scope Variables declared with let or const
 inside a block like within {}  are only accessible within that block.
{
    let block = "I am block"
    console.log(block)
}
 if we console console.log(block) now here it will give error
